{"ast":null,"code":"import _classCallCheck from \"/Volumes/WorkDisk/WebTask/Completed/CityLife/citylife_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/WorkDisk/WebTask/Completed/CityLife/citylife_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/WorkDisk/WebTask/Completed/CityLife/citylife_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/WorkDisk/WebTask/Completed/CityLife/citylife_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/WorkDisk/WebTask/Completed/CityLife/citylife_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Volumes/WorkDisk/WebTask/Completed/CityLife/citylife_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Volumes/WorkDisk/WebTask/Completed/CityLife/citylife_front/src/app/router/CityLife/Menu/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { Select } from 'react-inputs-validation';\nimport 'react-inputs-validation/lib/react-inputs-validation.min.css';\nimport { userSignOutSuccess, setTargetCity } from '../../../../actions';\nexport var Menu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Menu, _React$Component);\n\n  function Menu(props) {\n    var _this;\n\n    _classCallCheck(this, Menu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Menu).call(this, props));\n    _this.state = {\n      cities: [],\n      validate: false\n    };\n    _this.logOut = _this.logOut.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Menu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var dataSet = require('../../../data/cost_of_living_indices.json');\n\n      this.setState({\n        cities: dataSet\n      });\n    }\n  }, {\n    key: \"logOut\",\n    value: function logOut() {\n      this.props.userSignOutSuccess();\n      this.props.history.push('/');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var generateCitiesOptions = function generateCitiesOptions() {\n        if (!_this2.state.cities) {\n          return [];\n        }\n\n        return Object.keys(_this2.state.cities).sort().map(function (key, index) {\n          return {\n            id: index,\n            name: key\n          };\n        });\n      };\n\n      var getSelectedTargetCityNo = function getSelectedTargetCityNo() {\n        if (!_this2.state.cities || !_this2.props.targetCity) {\n          return -1;\n        }\n\n        var no = -1;\n        Object.keys(_this2.state.cities).sort().forEach(function (key, index) {\n          if (key === _this2.props.targetCity.key) {\n            no = index;\n          }\n        });\n        return no;\n      };\n\n      return React.createElement(\"header\", {\n        className: \"header header-shrink header-inverse fixed-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-expand-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: \"navbar-brand\",\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"logo-default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"assets/img/logo-default.png\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"logo-inverse\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"assets/img/logo-inverse.png\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        className: \"navbar-toggler p-0\",\n        \"data-toggle\": \"collapse\",\n        \"data-target\": \"#navbarNav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"hamburger hamburger--spin js-hamburger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"hamburger-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"hamburger-inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"collapse navbar-collapse\",\n        id: \"navbarNav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"navbar-nav ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.props.step === 4 && React.createElement(\"li\", {\n        className: \"nav-item\",\n        style: {\n          width: '250px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Select, {\n        tabIndex: \"1\",\n        id: \"location\",\n        name: \"location\",\n        value: getSelectedTargetCityNo(),\n        customStyleOptionListContainer: {\n          maxHeight: '200px',\n          overflowY: 'auto'\n        },\n        validate: this.state.validate,\n        optionList: generateCitiesOptions(),\n        customStyleWrapper: {\n          backgroundColor: 'white'\n        },\n        customStyleContainer: {\n          backgroundColor: 'white'\n        },\n        customStyleSelect: {\n          backgroundColor: 'white'\n        },\n        onChange: function onChange(selected_target_city, e) {\n          var newTargetCity = _this2.state.cities[Object.keys(_this2.state.cities).sort()[selected_target_city]];\n\n          newTargetCity.key = Object.keys(_this2.state.cities).sort()[selected_target_city];\n\n          _this2.props.setTargetCity(newTargetCity);\n        },\n        onBlur: function onBlur(e) {},\n        validationOption: {\n          name: 'City you want',\n          check: true,\n          required: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        className: \"nav-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/\",\n        className: \"nav-link\",\n        href: \"#\",\n        \"data-scrollto\": \"about\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"HOME\")), React.createElement(\"li\", {\n        className: \"nav-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"nav-link btn btn-sm btn-rounded btn-green u-w-110\",\n        onClick: this.logOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"LogOut\")))))));\n    }\n  }]);\n\n  return Menu;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var user = _ref.user,\n      citylife = _ref.citylife;\n  var authUser = user.authUser;\n  var targetCity = citylife.targetCity,\n      step = citylife.step;\n  return {\n    authUser: authUser,\n    targetCity: targetCity,\n    step: step\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  userSignOutSuccess: userSignOutSuccess,\n  setTargetCity: setTargetCity\n})(Menu));","map":{"version":3,"sources":["/Volumes/WorkDisk/WebTask/Completed/CityLife/citylife_front/src/app/router/CityLife/Menu/index.js"],"names":["React","connect","NavLink","withRouter","Select","userSignOutSuccess","setTargetCity","Menu","props","state","cities","validate","logOut","bind","dataSet","require","setState","history","push","generateCitiesOptions","Object","keys","sort","map","key","index","id","name","getSelectedTargetCityNo","targetCity","no","forEach","step","width","maxHeight","overflowY","backgroundColor","selected_target_city","e","newTargetCity","check","required","Component","mapStateToProps","user","citylife","authUser"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport { NavLink, withRouter} from 'react-router-dom';\nimport { Select } from 'react-inputs-validation';\nimport 'react-inputs-validation/lib/react-inputs-validation.min.css';\nimport { \n    userSignOutSuccess,\n    setTargetCity\n} from '../../../../actions';\n\nexport class Menu extends React.Component {\n\n    constructor(props) {\n        super(props)\n        \n        this.state = {\n            cities: [],\n            validate: false,\n        }\n        this.logOut = this.logOut.bind(this);\n    }\n\n    componentDidMount(){\n        const dataSet = require('../../../data/cost_of_living_indices.json');\n        this.setState({\n            cities: dataSet,\n        })\n    }\n\n    logOut(){\n        this.props.userSignOutSuccess();\n        this.props.history.push('/')\n    }\n\n\trender () {\n        const generateCitiesOptions = () => {\n            if(!this.state.cities){\n                return [];\n            }\n            return Object.keys(this.state.cities).sort().map((key, index) => {\n                return {\n                    id: index,\n                    name: key,\n                }\n            })\n        }\n\n        const getSelectedTargetCityNo = () =>{\n            if (!this.state.cities || !this.props.targetCity){\n                return -1;\n            }\n            let no = -1;\n            Object.keys(this.state.cities).sort().forEach((key, index) => {\n                if(key === this.props.targetCity.key){\n                    no = index;\n                }\n            });\n            return no;\n        }\n\t\treturn (\n            <header className=\"header header-shrink header-inverse fixed-top\">\n                <div className=\"container\">\n                    <nav className=\"navbar navbar-expand-lg\">\n                        <NavLink className=\"navbar-brand\" to=\"/\">\n                            <span className=\"logo-default\"><img src=\"assets/img/logo-default.png\" alt=\"\"/></span>\n                            <span className=\"logo-inverse\"><img src=\"assets/img/logo-inverse.png\" alt=\"\"/></span>\n                        </NavLink>\n                        <button className=\"navbar-toggler p-0\" data-toggle=\"collapse\" data-target=\"#navbarNav\">\n                            <div className=\"hamburger hamburger--spin js-hamburger\">\n                                <div className=\"hamburger-box\">\n                                    <div className=\"hamburger-inner\"></div>\n                                </div>\n                            </div>\n                        </button>\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                            <ul className=\"navbar-nav ml-auto\">\n                                {this.props.step === 4 && <li className=\"nav-item\" style={{width: '250px'}}>\n                                    <Select\n                                        tabIndex=\"1\" \n                                        id='location'\n                                        name='location'\n                                        value={getSelectedTargetCityNo()}\n                                        customStyleOptionListContainer = {{\n                                            maxHeight: '200px',\n                                            overflowY: 'auto',\n                                        }}\n                                        validate = {this.state.validate}\n                                        optionList={generateCitiesOptions()}\n                                        customStyleWrapper={{\n                                            backgroundColor: 'white',\n                                        }}\n                                        customStyleContainer={{\n                                            backgroundColor: 'white',\n                                        }}\n                                        customStyleSelect={{\n                                            backgroundColor: 'white',\n                                        }}\n                                        onChange={(selected_target_city, e) => {\n                                            let newTargetCity = this.state.cities[Object.keys(this.state.cities).sort()[selected_target_city]]\n                                            newTargetCity.key = Object.keys(this.state.cities).sort()[selected_target_city]\n                                            this.props.setTargetCity(newTargetCity);\n                                        }}\n                                        onBlur={(e) => {}}\n                                        validationOption={{\n                                            name: 'City you want', \n                                            check: true,\n                                            required: true \n                                        }}\n                                    />\n                                </li>}\n                                <li className=\"nav-item\">\n                                    <NavLink to=\"/\" className=\"nav-link\" href=\"#\" data-scrollto=\"about\">HOME</NavLink>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <a className=\"nav-link btn btn-sm btn-rounded btn-green u-w-110\" onClick={this.logOut}>LogOut</a>\n                                </li>\n                            </ul>\n                        </div>\n                    </nav>\n                </div>\n            </header>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = ({user, citylife}) => {\n    const {authUser} = user;\n    const {targetCity, step} = citylife;\n    return {authUser, targetCity, step};\n}\n\nexport default withRouter(connect(mapStateToProps, {\n    userSignOutSuccess,\n    setTargetCity\n})(Menu));"]},"metadata":{},"sourceType":"module"}