{"ast":null,"code":"import _classCallCheck from \"/Volumes/WorkDisk/WebTask/Completed/CityLife/citylife_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/WorkDisk/WebTask/Completed/CityLife/citylife_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/WorkDisk/WebTask/Completed/CityLife/citylife_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/WorkDisk/WebTask/Completed/CityLife/citylife_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/WorkDisk/WebTask/Completed/CityLife/citylife_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Volumes/WorkDisk/WebTask/Completed/CityLife/citylife_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Volumes/WorkDisk/WebTask/Completed/CityLife/citylife_front/src/app/router/CityLife/MainContent/TargetCity/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Select } from 'react-inputs-validation';\nimport { setTargetCity, setStep } from '../../../../../actions';\nimport 'react-inputs-validation/lib/react-inputs-validation.min.css';\nexport var TargetCity =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TargetCity, _React$Component);\n\n  function TargetCity(props) {\n    var _this;\n\n    _classCallCheck(this, TargetCity);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TargetCity).call(this, props));\n    _this.state = {\n      cities: null,\n      validate: false\n    };\n    _this.nextStep = _this.nextStep.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.prevStep = _this.prevStep.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TargetCity, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var dataSet = require('../../../../data/cost_of_living_indices.json');\n\n      this.setState({\n        cities: dataSet\n      });\n    }\n  }, {\n    key: \"prevStep\",\n    value: function prevStep() {\n      this.props.setStep(this.props.step - 1);\n    }\n  }, {\n    key: \"nextStep\",\n    value: function nextStep() {\n      if (!this.props.targetCity) {\n        return;\n      }\n\n      this.props.setStep(this.props.step + 1);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var generateCitiesOptions = function generateCitiesOptions() {\n        if (!_this2.state.cities) {\n          return [];\n        }\n\n        return Object.keys(_this2.state.cities).sort().map(function (key, index) {\n          return {\n            id: index,\n            name: key\n          };\n        });\n      };\n\n      var getSelectedTargetCityNo = function getSelectedTargetCityNo() {\n        if (!_this2.state.cities || !_this2.props.targetCity) {\n          return -1;\n        }\n\n        var no = -1;\n        Object.keys(_this2.state.cities).sort().forEach(function (key, index) {\n          if (key === _this2.props.targetCity.key) {\n            no = index;\n          }\n        });\n        return no;\n      };\n\n      return React.createElement(\"div\", {\n        className: \"row\",\n        id: \"target_city\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-white citylife_title mt-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Which city do you wish to live in?\")), React.createElement(\"div\", {\n        className: \"col-lg-5 col-md-6 mx-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Select, {\n        tabIndex: \"1\",\n        id: \"location\",\n        name: \"location\",\n        value: getSelectedTargetCityNo(),\n        customStyleOptionListContainer: {\n          maxHeight: '200px',\n          overflowY: 'auto'\n        },\n        validate: this.state.validate,\n        optionList: generateCitiesOptions(),\n        customStyleWrapper: {\n          backgroundColor: 'white',\n          height: '50px'\n        },\n        customStyleContainer: {\n          backgroundColor: 'white',\n          height: '50px'\n        },\n        customStyleSelect: {\n          backgroundColor: 'white',\n          height: '30px'\n        },\n        onChange: function onChange(selected_target_city, e) {\n          var newTargetCity = _this2.state.cities[Object.keys(_this2.state.cities).sort()[selected_target_city]];\n\n          newTargetCity.key = Object.keys(_this2.state.cities).sort()[selected_target_city];\n\n          _this2.props.setTargetCity(newTargetCity);\n        },\n        onBlur: function onBlur(e) {},\n        validationOption: {\n          name: 'City you want',\n          check: true,\n          required: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-lg-9 col-md-10 col-sm-12 mx-auto mt-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-md btn-rounded btn-danger text-white u-w-110\",\n        onClick: this.prevStep,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"PREV\")), React.createElement(\"div\", {\n        className: \"col-6 text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, this.props.targetCity && React.createElement(\"button\", {\n        className: \"btn btn-md btn-rounded btn-success u-w-110\",\n        onClick: this.nextStep,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"NEXT\")))));\n    }\n  }]);\n\n  return TargetCity;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var citylife = _ref.citylife;\n  var targetCity = citylife.targetCity,\n      step = citylife.step;\n  return {\n    targetCity: targetCity,\n    step: step\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setTargetCity: setTargetCity,\n  setStep: setStep\n})(TargetCity);","map":{"version":3,"sources":["/Volumes/WorkDisk/WebTask/Completed/CityLife/citylife_front/src/app/router/CityLife/MainContent/TargetCity/index.js"],"names":["React","connect","Select","setTargetCity","setStep","TargetCity","props","state","cities","validate","nextStep","bind","prevStep","dataSet","require","setState","step","targetCity","generateCitiesOptions","Object","keys","sort","map","key","index","id","name","getSelectedTargetCityNo","no","forEach","maxHeight","overflowY","backgroundColor","height","selected_target_city","e","newTargetCity","check","required","Component","mapStateToProps","citylife"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Select } from 'react-inputs-validation';\nimport { \n    setTargetCity,\n    setStep,\n} from '../../../../../actions';\nimport 'react-inputs-validation/lib/react-inputs-validation.min.css';\n\nexport class TargetCity extends React.Component {\n\n    constructor(props) {\n        super(props)\n        \n        this.state = {\n            cities: null,\n            validate: false,\n        };\n        this.nextStep = this.nextStep.bind(this);\n        this.prevStep = this.prevStep.bind(this);\n    }\n    \n    componentDidMount(){\n        const dataSet = require('../../../../data/cost_of_living_indices.json');\n        this.setState({\n            cities: dataSet,\n        })\n    }\n\n    prevStep(){\n        this.props.setStep(this.props.step - 1)\n    }\n\n    nextStep(){\n        if(!this.props.targetCity){\n            return;\n        }\n        this.props.setStep(this.props.step + 1)\n    }\n\n    \n\trender () {\n\n        const generateCitiesOptions = () => {\n            if(!this.state.cities){\n                return [];\n            }\n            return Object.keys(this.state.cities).sort().map((key, index) => {\n                return {\n                    id: index,\n                    name: key,\n                }\n            })\n        }\n\n        const getSelectedTargetCityNo = () =>{\n            if (!this.state.cities || !this.props.targetCity){\n                return -1;\n            }\n            let no = -1;\n            Object.keys(this.state.cities).sort().forEach((key, index) => {\n                if(key === this.props.targetCity.key){\n                    no = index;\n                }\n            });\n            return no;\n        }\n\n        return (\n            <div className=\"row\" id=\"target_city\">\n                <div className=\"col-12 text-center\">\n                    <h1 className=\"text-white citylife_title mt-6\">Which city do you wish to live in?</h1>\n                </div>\n                <div className=\"col-lg-5 col-md-6 mx-auto\">\n                    <Select\n                        tabIndex=\"1\" \n                        id='location'\n                        name='location'\n                        value={getSelectedTargetCityNo()}\n                        customStyleOptionListContainer = {{\n                            maxHeight: '200px',\n                            overflowY: 'auto',\n                        }}\n                        validate = {this.state.validate}\n                        optionList={generateCitiesOptions()}\n                        customStyleWrapper={{\n                            backgroundColor: 'white',\n                            height: '50px'\n                        }}\n                        customStyleContainer={{\n                            backgroundColor: 'white',\n                            height: '50px'\n                        }}\n                        customStyleSelect={{\n                            backgroundColor: 'white',\n                            height: '30px'\n                        }}\n                        onChange={(selected_target_city, e) => {\n                            let newTargetCity = this.state.cities[Object.keys(this.state.cities).sort()[selected_target_city]]\n                            newTargetCity.key = Object.keys(this.state.cities).sort()[selected_target_city]\n                            this.props.setTargetCity(newTargetCity);\n                        }}\n                        onBlur={(e) => {}}\n                        validationOption={{\n                            name: 'City you want', \n                            check: true,\n                            required: true \n                        }}\n                    />\n                </div>\n                <div className=\"col-lg-9 col-md-10 col-sm-12 mx-auto mt-6\">\n                    <div className=\"row\">\n                        <div className=\"col-6\">\n                            <button className=\"btn btn-md btn-rounded btn-danger text-white u-w-110\" onClick={this.prevStep}>PREV</button>\n                        </div>\n                        <div className=\"col-6 text-right\">\n                            {this.props.targetCity && <button className=\"btn btn-md btn-rounded btn-success u-w-110\" onClick={this.nextStep}>NEXT</button>}\n                        </div>\n                    </div>\n                </div>\n            </div> \n\t\t)\n\t}\n}\n\nconst mapStateToProps = ({ citylife}) => {\n    const {targetCity, step} = citylife;\n    return {targetCity, step};\n}\n\nexport default connect (mapStateToProps, {\n    setTargetCity,\n    setStep\n}) (TargetCity);"]},"metadata":{},"sourceType":"module"}